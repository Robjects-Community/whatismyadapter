services:

  # jenkins-alt:
  #   image: docker.io/garzarobmdocker/jenkins:latest
  #   build:
  #     context: .
  #     dockerfile: infrastructure/docker/jenkins/Dockerfile
  #   ports:
  #     - '${JENKINS_ALT_HTTP_PORT:-8083}:8080'
  #     - '${JENKINS_ALT_AGENT_PORT:-50001}:50000'
  #   volumes:
  #     - jenkins_alt_home:/var/jenkins_home
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./infrastructure/docker/jenkins/jenkins.yaml:/var/jenkins_home/jenkins.yaml
  #   environment:
  #     - JAVA_OPTS=${JAVA_OPTS}
  #   privileged: true
  #   user: root

  willowcms:
    build:
      context: .
      dockerfile: infrastructure/docker/willowcms/Dockerfile
      args:
        - UID=${DOCKER_UID:-1000}
        - GID=${DOCKER_GID:-1000}
    ports: 
      - "${WILLOW_HTTP_PORT:-8080}:80"
    volumes:
      - ./app:/var/www/html/
      - ./infrastructure/docker/willowcms/config/app/cms_app_local.php:/var/www/html/config/app_local.php
      - ./infrastructure/docker/willowcms/config/nginx/logs:/var/log/nginx/
    env_file:
      - ./app/config/.env
    environment:
      # Override specific Docker networking settings that may not be in .env
      DB_HOST: mysql
      TEST_DB_HOST: mysql
      REDIS_HOST: willowcms
      OPENAI_API_KEY: ${OPENAI_API_KEY}


  mysql:
    image: mysql:${MYSQL_IMAGE_TAG:-8.0}
    platform: linux/amd64
    command: --default-authentication-plugin=mysql_native_password
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "${MYSQL_PORT:-3310}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      # - mysql_data:/docker-entrypoint-initdb.d:ro
      - ./infrastructure/docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    env_file:
      - ./app/config/.env

  phpmyadmin:
    image: phpmyadmin:${PHPMYADMIN_IMAGE_TAG:-latest}
    ports:
      - ${PMA_HTTP_PORT:-8082}:80
    environment:
      - PMA_HOST=mysql
      - PMA_USER=${MYSQL_USER}
      - PMA_PASSWORD=${MYSQL_PASSWORD}
      - UPLOAD_LIMIT=${UPLOAD_LIMIT:-300M}

  # jenkins:
  #   build:
  #     context: .
  #     dockerfile: infrastructure/docker/jenkins/Dockerfile
  #   privileged: true
  #   user: root
  #   ports:
  #     - "${JENKINS_HTTP_PORT:-8081}:8080"
  #     - "${JENKINS_AGENT_PORT:-50000}:50000"
  #   volumes:
  #     - jenkins_home:/var/jenkins_home
  #     - /var/run/docker.sock:/var/run/docker.sock
  #     - ./infrastructure/docker/jenkins/jenkins.yaml:/var/jenkins_home/jenkins.yaml
  #   environment:
  #     - JAVA_OPTS=${JAVA_OPTS:--Djenkins.install.runSetupWizard=false}

  mailpit:
    image: axllent/mailpit:${MAILPIT_IMAGE_TAG:-latest}
    ports:
      - "${MAILPIT_SMTP_PORT:-1125}:1025"
      - "${MAILPIT_HTTP_PORT:-8025}:8025"
    volumes:
      - ./infrastructure/docker/mailpit/data:/data
      # - mailpit_data:/data
    environment:
      - MP_MAX_MESSAGES=${MP_MAX_MESSAGES:-5000}
      - MP_DATABASE=${MP_DATABASE:-/data/mailpit.db}
      - MP_SMTP_AUTH_ACCEPT_ANY=${MP_SMTP_AUTH_ACCEPT_ANY:-1}
      - MP_SMTP_AUTH_ALLOW_INSECURE=${MP_SMTP_AUTH_ALLOW_INSECURE:-1}

  redis-commander:
    image: rediscommander/redis-commander:${REDIS_COMMANDER_IMAGE_TAG:-latest}
    environment:
      - REDIS_HOST=${REDIS_HOST:-willowcms}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=willowcms
      - HTTP_USER=willowcms
      - HTTP_PASSWORD=willowcms
    ports:
      - "${REDIS_COMMANDER_HTTP_PORT:-8084}:8081"
    depends_on:
      - willowcms

  # rabbitmq:
  #   image: rabbitmq:${RABBITMQ_IMAGE_TAG:-3.13-management}
  #   platform: linux/amd64
  #   ports:
  #     - "${RABBITMQ_PORT:-5672}:5672"       # AMQP port
  #     - "${RABBITMQ_MANAGEMENT_PORT:-15672}:15672"  # Management UI
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
  #     - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
  #     - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_VHOST:-/}
  #   healthcheck:
  #     test: ["CMD", "rabbitmq-diagnostics", "-q", "check_port_connectivity"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  #     start_period: 30s
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq
  #   restart: unless-stopped

  # image-analysis-worker:
  #   build:
  #     context: .
  #     dockerfile: infrastructure/docker/willowcms/Dockerfile
  #     args:
  #       - UID=${DOCKER_UID:-1000}
  #       - GID=${DOCKER_GID:-1000}
  #   volumes:
  #     - ./app:/var/www/html/
  #     - ./infrastructure/docker/willowcms/config/app/cms_app_local.php:/var/www/html/config/app_local.php
  #   env_file:
  #     - ./app/config/.env
  #   environment:
  #     # Override specific Docker networking settings
  #     - DB_HOST=mysql
  #     - TEST_DB_HOST=mysql
  #     - REDIS_HOST=willowcms
  #     # Queue config key to use from database
  #     - QUEUE_CONFIG_KEY=${QUEUE_CONFIG_KEY:-image_analysis}
  #     - OPENAI_API_KEY=${OPENAI_API_KEY}
  #   command: >
  #     sh -c "WAIT_CMD=\$$(php bin/get_queue_config.php \$${QUEUE_CONFIG_KEY} wait_command) &&
  #            READY_MSG=\$$(php bin/get_queue_config.php \$${QUEUE_CONFIG_KEY} ready_message) &&
  #            WORKER_CMD=\$$(php bin/get_queue_config.php \$${QUEUE_CONFIG_KEY} worker_command) &&
  #            eval \$${WAIT_CMD} &&
  #            echo \"\$${READY_MSG}\" &&
  #            \$${WORKER_CMD}"
  #   depends_on:
  #     rabbitmq:
  #       condition: service_healthy
  #     willowcms:
  #       condition: service_started
  #     mysql:
  #       condition: service_started
  #   restart: unless-stopped

volumes:
  mysql_data:
  rabbitmq_data:
  jenkins_home:
  jenkins_alt_home:
  mailpit_data:

#   mailpit:
#     image: axllent/mailpit:latest
#     ports:
#       - '1125:1025'
#       - '8025:8025'
#     volumes:
#       - mailpit_data:/data
#     environment:
#       - MP_MAX_MESSAGES=${MP_MAX_MESSAGES}
#       - MP_DATABASE=${MP_DATABASE}
#       - MP_SMTP_AUTH_ACCEPT_ANY=${MP_SMTP_AUTH_ACCEPT_ANY}
#       - MP_SMTP_AUTH_ALLOW_INSECURE=${MP_SMTP_AUTH_ALLOW_INSECURE}
#     env_file:
#       - ./config/.env

#   redis-commander:
#     image: rediscommander/redis-commander:latest
#     depends_on:
#       - willowcms
#     ports:
#       - 8084:8081
#     environment:
#       - REDIS_HOST=${REDIS_COMMANDER_HOST}
#       - REDIS_PORT=${REDIS_COMMANDER_PORT}
#       - REDIS_PASSWORD=${REDIS_COMMANDER_PASSWORD}
#       - REDIS_USERNAME=${REDIS_COMMANDER_USERNAME}
#       - HTTP_USER=${HTTP_USER}
#       - HTTP_PASSWORD=${HTTP_PASSWORD}


