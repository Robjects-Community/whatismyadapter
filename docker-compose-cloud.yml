# WhatIsMyAdapter Portainer Cloud Stack
# Repository: https://github.com/Robjects-Community/WhatIsMyAdaptor.git
# Branch: main-clean or portainer-stack
# Stack Name: whatismyadapter
# Root Path: /volume1/docker/whatismyadapter
# User: whatismyadapter (UID:1034, GID:100)

services:
  willowcms:
    container_name: WhatIsMyAdapter-App
    # Use pre-built image from GitHub Container Registry or Docker Hub
    # For Portainer deployment, image must be pre-built and pushed to registry
    # Build is commented out - use for local development only
    # build:
    #   context: .
    #   dockerfile: infrastructure/docker/willowcms/Dockerfile
    #   args:
    #     - UID=${DOCKER_UID:-1034}
    #     - GID=${DOCKER_GID:-100}
    image: ${WILLOWCMS_IMAGE:-garzarobmdocker/willowcms:pre-willowcms-beta}
    pull_policy: always
    security_opt:
      - no-new-privileges:true
    ports:
      - "${WILLOW_HTTP_PORT:-8080}:80"
    volumes:
      - /volume1/docker/whatismyadapter/app:/var/www/html:rw
      - /volume1/docker/whatismyadapter/logs:/var/www/html/logs:rw
      - /volume1/docker/whatismyadapter/nginx-logs:/var/log/nginx:rw
      - /volume1/docker/whatismyadapter/tmp:/var/www/html/tmp:rw
    user: "${DOCKER_UID:-1034}:${DOCKER_GID:-100}"
    environment:
      APP_NAME: ${APP_NAME:-WhatIsMyAdapter}
      DEBUG: ${DEBUG:-false}
      APP_ENCODING: UTF-8
      APP_DEFAULT_LOCALE: en_US
      APP_DEFAULT_TIMEZONE: ${APP_DEFAULT_TIMEZONE:-America/Chicago}
      SECURITY_SALT: ${SECURITY_SALT}
      APP_FULL_BASE_URL: ${APP_FULL_BASE_URL}
      DB_HOST: mysql
      DB_USERNAME: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_DATABASE: ${MYSQL_DATABASE}
      DB_PORT: 3306
      TEST_DB_HOST: mysql
      TEST_DB_USERNAME: ${MYSQL_USER}
      TEST_DB_PASSWORD: ${MYSQL_PASSWORD}
      TEST_DB_DATABASE: ${MYSQL_DATABASE}_test
      TEST_DB_PORT: 3306
      EMAIL_HOST: mailpit
      EMAIL_PORT: 1025
      EMAIL_TIMEOUT: 30
      EMAIL_REPLY: ${EMAIL_REPLY:-hello@whatismyadapter.com}
      EMAIL_NOREPLY: ${EMAIL_NOREPLY:-noreply@whatismyadapter.com}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USERNAME: ${REDIS_USERNAME:-default}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_DATABASE: 0
      REDIS_URL: redis://${REDIS_USERNAME}:${REDIS_PASSWORD}@redis:6379/0
      REDIS_TEST_URL: redis://${REDIS_USERNAME}:${REDIS_PASSWORD}@redis:6379/0
      QUEUE_DEFAULT_URL: redis://${REDIS_USERNAME}:${REDIS_PASSWORD}@redis:6379/0
      QUEUE_TEST_URL: redis://${REDIS_USERNAME}:${REDIS_PASSWORD}@redis:6379/0
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      YOUTUBE_API_KEY: ${YOUTUBE_API_KEY:-}
      TRANSLATE_API_KEY: ${TRANSLATE_API_KEY:-}
      WILLOW_ADMIN_USERNAME: ${WILLOW_ADMIN_USERNAME:-admin}
      WILLOW_ADMIN_PASSWORD: ${WILLOW_ADMIN_PASSWORD}
      WILLOW_ADMIN_EMAIL: ${WILLOW_ADMIN_EMAIL}
      LOG_DEBUG_PATH: /var/www/html/logs
      LOG_ERROR_PATH: /var/www/html/logs
      LOG_QUERIES_PATH: /var/www/html/logs
      LOG_ADMIN_ACTIONS_PATH: /var/www/html/logs
      LOG_DEBUG_FILE: debug
      LOG_ERROR_FILE: error
      LOG_QUERIES_FILE: queries
      LOG_ADMIN_ACTIONS_FILE: bulk_actions
      LOG_DEBUG_LEVELS: notice,info,debug
      LOG_ERROR_LEVELS: warning,error,critical,alert,emergency
      EXPERIMENTAL_TESTS: ${EXPERIMENTAL_TESTS:-Off}
      TZ: ${APP_DEFAULT_TIMEZONE:-America/Chicago}
    healthcheck:
      test: curl -f http://localhost:80/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s
    depends_on:
      mysql:
        condition: service_started
      redis:
        condition: service_healthy
    networks:
      - whatismyadapter_network
    restart: on-failure:5

  redis:
    container_name: WhatIsMyAdapter-Redis
    image: redis:${REDIS_TAG:-7.2-alpine}
    hostname: whatismyadapter-redis
    command: >
      redis-server 
      --requirepass ${REDIS_PASSWORD}
      --appendonly yes
      --save 900 1
      --save 300 10
      --save 60 10000
    user: "${DOCKER_UID:-1034}:${DOCKER_GID:-100}"
    environment:
      TZ: ${APP_DEFAULT_TIMEZONE:-America/Chicago}
    healthcheck:
      test: ["CMD-SHELL", "redis-cli -a \"${REDIS_PASSWORD}\" ping | grep PONG"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 10s
    volumes:
      - /volume1/docker/whatismyadapter/redis:/data:rw
    networks:
      - whatismyadapter_network
    restart: on-failure:10

  mysql:
    container_name: WhatIsMyAdapter-DB
    image: mysql:${MYSQL_IMAGE_TAG:-8.0}
    security_opt:
      - no-new-privileges:true
    hostname: whatismyadapter-db
    ports:
      - "${MYSQL_PORT:-3310}:3306"
    volumes:
      - /volume1/docker/whatismyadapter/mysql:/var/lib/mysql:rw
      - /volume1/docker/whatismyadapter/mysql-config:/etc/mysql/conf.d:rw
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_INNODB_LOG_FILE_SIZE: 256M
      MYSQL_INNODB_BUFFER_POOL_SIZE: 256M
      TZ: ${APP_DEFAULT_TIMEZONE:-America/Chicago}
    command: >
      --default-authentication-plugin=mysql_native_password
      --log-error=/var/log/mysql/error.log
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --general-log=1
      --general-log-file=/var/log/mysql/query.log
      --transaction-isolation=READ-COMMITTED
      --binlog-format=ROW
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - whatismyadapter_network
    restart: on-failure:15

  phpmyadmin:
    container_name: WhatIsMyAdapter-phpMyAdmin
    image: phpmyadmin:${PHPMYADMIN_IMAGE_TAG:-latest}
    hostname: whatismyadapter-phpmyadmin
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "${PMA_HTTP_PORT:-8082}:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: ${PMA_USER:-root}
      PMA_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      UPLOAD_LIMIT: 300M
      TZ: ${APP_DEFAULT_TIMEZONE:-America/Chicago}
    healthcheck:
      test: curl -f http://localhost:80/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - whatismyadapter_network
    restart: on-failure:5

  mailpit:
    container_name: WhatIsMyAdapter-Mailpit
    image: axllent/mailpit:${MAILPIT_IMAGE_TAG:-latest}
    hostname: whatismyadapter-mailpit
    ports:
      - "${MAILPIT_SMTP_PORT:-1125}:1025"
      - "${MAILPIT_HTTP_PORT:-8025}:8025"
    user: "${DOCKER_UID:-1034}:${DOCKER_GID:-100}"
    volumes:
      - /volume1/docker/whatismyadapter/mailpit:/data:rw
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATABASE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
      TZ: ${APP_DEFAULT_TIMEZONE:-America/Chicago}
    healthcheck:
      test: curl -f http://localhost:8025/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - whatismyadapter_network
    restart: on-failure:5

  redis-commander:
    container_name: WhatIsMyAdapter-RedisCommander
    image: rediscommander/redis-commander:${REDIS_COMMANDER_IMAGE_TAG:-latest}
    hostname: whatismyadapter-redis-commander
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "${REDIS_COMMANDER_HTTP_PORT:-8084}:8081"
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      HTTP_USER: ${REDIS_COMMANDER_USERNAME:-admin}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD}
      TZ: ${APP_DEFAULT_TIMEZONE:-America/Chicago}
    healthcheck:
      test: curl -f http://localhost:8081/ || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - whatismyadapter_network
    restart: on-failure:5

networks:
  whatismyadapter_network:
    driver: bridge
    name: whatismyadapter_network
