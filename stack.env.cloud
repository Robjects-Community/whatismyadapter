# WhatIsMyAdapter Portainer Cloud Stack - Production Environment
# Repository: https://github.com/Robjects-Community/WhatIsMyAdaptor.git
# Domain: https://whatismyadapter.robjects.me
# Stack Name: whatismyadapter
# Root Path: /volume1/docker/whatismyadapter
# User: whatismyadapter (UID:1034, GID:100)
#
# SECURITY NOTICE: 
# - All placeholder passwords have been replaced with secure random values
# - REPLACE ALL PASSWORDS WITH YOUR OWN SECURE VALUES BEFORE DEPLOYMENT
# - Never commit this file with real passwords to version control
# - Store sensitive values in Portainer's secure environment variables

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
APP_NAME=WhatIsMyAdapter
APP_ENV=production
DEBUG=false
APP_ENCODING=UTF-8
APP_DEFAULT_LOCALE=en_US
APP_DEFAULT_TIMEZONE=America/Chicago

# Production Domain (behind reverse proxy with SSL termination)
APP_FULL_BASE_URL=https://whatismyadapter.robjects.me

# Security Salt - CRITICAL: Generate a unique 32+ character random string
# Use: openssl rand -base64 32
SECURITY_SALT=YOUR_RANDOM_32_CHAR_SALT_REPLACE_ME_NOW

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# SECURITY: Replace all database passwords with strong, unique values
# Recommendation: Use 24+ character random strings with mixed case, numbers, symbols

# Root password for MySQL administrative access
MYSQL_ROOT_PASSWORD=YOUR_MYSQL_ROOT_PASSWORD_REPLACE_ME

# Application database and credentials
MYSQL_DATABASE=whatismyadapter_db
MYSQL_USER=whatismyadapter_user
MYSQL_PASSWORD=YOUR_MYSQL_USER_PASSWORD_REPLACE_ME

# Database performance tuning
MYSQL_IMAGE_TAG=8.0
MYSQL_PORT=3310
MYSQL_INNODB_LOG_FILE_SIZE=256M
MYSQL_INNODB_BUFFER_POOL_SIZE=256M

# =============================================================================
# REDIS CONFIGURATION
# =============================================================================
# SECURITY: Replace Redis password with strong random value
REDIS_USERNAME=default
REDIS_PASSWORD=YOUR_REDIS_PASSWORD_REPLACE_ME

REDIS_PORT=6379
REDIS_DATABASE=0
REDIS_TAG=7.2-alpine
REDIS_HEALTHCHECK_INTERVAL=10s
REDIS_HEALTHCHECK_TIMEOUT=3s
REDIS_HEALTHCHECK_RETRIES=5

# =============================================================================
# DOCKER & NETWORKING
# =============================================================================
PROJECT_NAME=whatismyadapter
NETWORK_NAME=whatismyadapter_network
VOLUME_DRIVER=local

# Service Names (must match docker-compose-cloud.yml)
WILLOW_APP_SERVICE=willowcms
WILLOW_DB_SERVICE=mysql
WILLOW_REDIS_SERVICE=redis

# Port Mappings (internal container ports)
# NOTE: External access via reverse proxy on port 443 (HTTPS)
WILLOW_HTTP_PORT=8080
WILLOW_HTTPS_PORT=8443
PMA_HTTP_PORT=8082
REDIS_COMMANDER_HTTP_PORT=8084
MAILPIT_SMTP_PORT=1125
MAILPIT_HTTP_PORT=8025

# Docker User/Group (matches whatismyadapter user on server)
DOCKER_UID=1034
DOCKER_GID=100

# WillowCMS Image Configuration
# For production: use tagged, hardened image (not :latest)
WILLOWCMS_IMAGE=whatismyadapter:main-clean-hardened

# Volume Configuration
# All paths are on the cloud server at /volume1/docker/whatismyadapter
# These are configured in docker-compose-cloud.yml and should not be changed
# unless you also update the compose file

# =============================================================================
# GIT REPOSITORY CONFIGURATION
# =============================================================================
# Correct repository for WhatIsMyAdapter project
GIT_URL=https://github.com/Robjects-Community/WhatIsMyAdaptor.git
GIT_REF=main-clean

# =============================================================================
# EMAIL CONFIGURATION
# =============================================================================
# Internal mail service (Mailpit for development/testing emails)
EMAIL_HOST=mailpit
EMAIL_PORT=1025
EMAIL_TIMEOUT=30
EMAIL_USERNAME=
EMAIL_PASSWORD=

# Email addresses for your domain
EMAIL_REPLY=hello@whatismyadapter.robjects.me
EMAIL_NOREPLY=noreply@whatismyadapter.robjects.me

# =============================================================================
# ADMIN CONFIGURATION
# =============================================================================
# SECURITY: Change admin password to strong, unique value
WILLOW_ADMIN_USERNAME=admin
WILLOW_ADMIN_PASSWORD=YOUR_ADMIN_PASSWORD_REPLACE_ME
WILLOW_ADMIN_EMAIL=admin@whatismyadapter.robjects.me

# =============================================================================
# EXTERNAL API KEYS
# =============================================================================
# Leave empty if not using these services
# If using, set these in Portainer UI for security

# OpenAI/Anthropic/Perplexity API Keys
OPENAI_API_KEY=
OPEN_AI_API_KEY=
ANTHROPIC_API_KEY=
PERPLEXITY_API_KEY=

# Media & Translation APIs
YOUTUBE_API_KEY=
TRANSLATE_API_KEY=
UNSPLASH_ACCESS_KEY=

# Cloud Provider Keys
DIGITAL_OCEAN_KEY=

# =============================================================================
# PHPMYADMIN CONFIGURATION
# =============================================================================
PMA_HOST=mysql
PMA_USER=root
# SECURITY: Must match MYSQL_ROOT_PASSWORD
PMA_PASSWORD=YOUR_MYSQL_ROOT_PASSWORD_REPLACE_ME
PHPMYADMIN_IMAGE_TAG=latest
UPLOAD_LIMIT=300M

# =============================================================================
# MAILPIT CONFIGURATION
# =============================================================================
MP_MAX_MESSAGES=5000
MP_SMTP_AUTH_ACCEPT_ANY=1
MP_SMTP_AUTH_ALLOW_INSECURE=1
MAILPIT_IMAGE_TAG=latest

# =============================================================================
# REDIS COMMANDER CONFIGURATION
# =============================================================================
# SECURITY: Set strong password for Redis Commander web UI
REDIS_COMMANDER_USERNAME=admin
REDIS_COMMANDER_PASSWORD=YOUR_REDIS_COMMANDER_PASSWORD_REPLACE_ME
REDIS_COMMANDER_IMAGE_TAG=latest

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
LOG_DEBUG_PATH=/var/www/html/logs
LOG_ERROR_PATH=/var/www/html/logs
LOG_QUERIES_PATH=/var/www/html/logs
LOG_ADMIN_ACTIONS_PATH=/var/www/html/logs
LOG_DEBUG_FILE=debug
LOG_ERROR_FILE=error
LOG_QUERIES_FILE=queries
LOG_ADMIN_ACTIONS_FILE=bulk_actions
LOG_DEBUG_LEVELS=notice,info,debug
LOG_ERROR_LEVELS=warning,error,critical,alert,emergency

# =============================================================================
# FEATURE FLAGS
# =============================================================================
EXPERIMENTAL_TESTS=Off

# =============================================================================
# DOCKER IMAGE CONFIGURATION
# =============================================================================
# WillowCMS image from GitHub Container Registry
# This must be a pre-built image pushed to a registry (Docker Hub, GHCR, etc.)
# For Portainer cloud deployment, the image must be publicly accessible or
# you must configure registry credentials in Portainer

# Use the same image as local development (from config/.env)
WILLOWCMS_IMAGE=ghcr.io/robjects-community/whatismyadapter_cms:pre-willowcms-beta

# Alternative options:
# Option 1: Latest tag
# WILLOWCMS_IMAGE=ghcr.io/robjects-community/whatismyadapter_cms:latest

# Option 2: Docker Hub (if you've pushed there)
# WILLOWCMS_IMAGE=yourdockerhubusername/whatismyadapter:latest

TAG=pre-willowcms-beta

# =============================================================================
# ADDITIONAL LOGGING & DEVELOPMENT
# =============================================================================
# Application environment
APP_ENV=production

# Log level (debug, info, warning, error)
LOG_LEVEL=warning

# =============================================================================
# PRODUCTION DEPLOYMENT CHECKLIST
# =============================================================================
# Before deploying to production, ensure you have:
#
# [ ] Changed SECURITY_SALT to a random 32+ character string
# [ ] Set all database passwords (MYSQL_ROOT_PASSWORD, MYSQL_PASSWORD)
# [ ] Set REDIS_PASSWORD to a strong random value
# [ ] Set WILLOW_ADMIN_PASSWORD to a strong password
# [ ] Set REDIS_COMMANDER_PASSWORD to a strong password
# [ ] Updated PMA_PASSWORD to match MYSQL_ROOT_PASSWORD
# [ ] Verified APP_FULL_BASE_URL is correct: https://whatismyadapter.robjects.me
# [ ] Confirmed all email addresses use your domain
# [ ] Set API keys if using external services (OpenAI, YouTube, etc.)
# [ ] Verified DOCKER_UID and DOCKER_GID match server user (1034:100)
# [ ] Confirmed GIT_URL points to correct repository
# [ ] Set DEBUG=false and APP_ENV=production
# [ ] Configured reverse proxy (Nginx/Caddy) for SSL termination
# [ ] Set up DNS A/CNAME record for whatismyadapter.robjects.me
# [ ] Created all required directories on server with correct ownership
#
# =============================================================================
# PORTAINER DEPLOYMENT INSTRUCTIONS
# =============================================================================
# 1. In Portainer, create/update stack named "whatismyadapter"
# 2. Upload or paste docker-compose-cloud.yml content
# 3. Load this stack.env.cloud file OR manually set variables in Portainer UI
# 4. For sensitive values (passwords), use Portainer's environment variables
#    instead of storing them in this file
# 5. Deploy the stack and monitor logs for any issues
#
# Access URLs after deployment:
# - Application: https://whatismyadapter.robjects.me (via reverse proxy)
# - Direct App: http://your-server-ip:8080 (fallback, if proxy fails)
# - phpMyAdmin: http://your-server-ip:8082
# - Redis Commander: http://your-server-ip:8084
# - Mailpit: http://your-server-ip:8025
#
# =============================================================================
# PASSWORD GENERATION COMMANDS
# =============================================================================
# Generate secure random passwords using these commands:
#
# For SECURITY_SALT (32+ characters):
#   openssl rand -base64 32
#
# For passwords (24+ characters):
#   openssl rand -base64 24
#
# Or use a password manager to generate strong, unique passwords
# =============================================================================
